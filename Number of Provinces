class Solution {
    public:
    void dfs(int curr,int V,vector<vector<int>>&isConnected,vector<bool>&visited){
        visited[curr]=true;
        //vector<int>adj;
        vector<int>adj;
        for(int i=0; i<V; i++ ){
            int x =  isConnected[curr][i];  // x = connection
            if(x == 1)
                adj.push_back(i);
        }
        
        for(auto x: adj){
            if(!visited[x]){
                dfs(x, V, isConnected, visited);
            }
        }
    }

public:
    int findCircleNum(vector<vector<int>>& isConnected) {
        int V=isConnected.size();
        vector<bool>visited(V,0);
        int prov=0;
        for(int i=0;i<V;i++){
            if(!visited[i]){
                prov++;
                dfs(i,V,isConnected,visited);
                

            }
        }
        return prov;
    }
};
